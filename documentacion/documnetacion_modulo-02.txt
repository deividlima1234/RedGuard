
---

# ðŸ“„ DocumentaciÃ³n TÃ©cnica â€“ MÃ³dulo 02: Lista Blanca

## 1. DescripciÃ³n General

El **MÃ³dulo 02: Lista Blanca** de **RedGuard** administra los dispositivos confiables en la red.
Su funciÃ³n es registrar manualmente direcciones IP o MAC, asociarlas a un usuario y mantener este registro de forma persistente en `usuarios.json`.

AdemÃ¡s:

* Permite agregar, listar y eliminar dispositivos confiables desde la interfaz web.
* EstÃ¡ integrado con el **MÃ³dulo 01: EscÃ¡ner de Red**, marcando los dispositivos como **Confiable** o **No confiable** durante el anÃ¡lisis.
* La lÃ³gica de comparaciÃ³n estÃ¡ centralizada en `comparador_lista_blanca.py`.

---

## 2. Arquitectura del Sistema

**Flujo de funcionamiento:**

```
Usuario â†’ Interfaz Web (dashboard.html) 
        â†’ Flask (app.py)
        â†’ comparador_lista_blanca.py 
        â†’ usuarios.json (persistencia)
```

**Componentes:**

* **Frontend (HTML, CSS, JS)**

  * Formulario de registro de dispositivos confiables.
  * Tabla dinÃ¡mica con dispositivos de la lista blanca.
  * Botones para eliminar registros.
* **Backend (Flask â€“ Python)**

  * Endpoints `/lista_blanca` para gestiÃ³n CRUD.
  * ConversiÃ³n de formatos lista â†” diccionario para compatibilidad con el MÃ³dulo 01.
* **Persistencia**

  * `data/usuarios.json` en formato lista de objetos.
* **IntegraciÃ³n**

  * `comparador_lista_blanca.py` compara dispositivos detectados con la lista blanca.

---

## 3. Estructura del Proyecto (archivos relacionados)

```
RedGuard/
â”œâ”€â”€ app.py                         # Rutas Flask y lÃ³gica principal
â”œâ”€â”€ core/
â”‚   â”œâ”€â”€ comparador_lista_blanca.py # Carga y comparaciÃ³n de lista blanca
â”‚   â””â”€â”€ procesador.py              # OrquestaciÃ³n del escaneo
â”œâ”€â”€ data/
â”‚   â””â”€â”€ usuarios.json              # Lista de dispositivos confiables
â”œâ”€â”€ static/
â”‚   â””â”€â”€ style.css                  # Estilos frontend
â”œâ”€â”€ templates/
â”‚   â””â”€â”€ dashboard.html             # Interfaz principal
â””â”€â”€ utils/
    â””â”€â”€ usuarios.py                # Funciones de soporte
```

---

## 4. Archivos Clave

### 4.1 `app.py`

* **GET `/lista_blanca`**

  * Devuelve la lista de dispositivos confiables.
* **POST `/lista_blanca`**

  * Agrega un nuevo dispositivo con fecha de registro.
* **DELETE `/lista_blanca`**

  * Elimina un dispositivo por su identificador.
* **POST `/escaneo`**

  * Llama a `ejecutar_escaneo()` y usa `comparador_lista_blanca.py` para marcar confiables/no confiables.

---

### 4.2 `comparador_lista_blanca.py`

```python
def cargar_lista_blanca(ruta):
    # Carga usuarios.json como diccionario {MAC: nombre}

def comparar_dispositivos(dispositivos, ruta_lista_blanca):
    # Marca 'usuario' y 'estado' en base a la lista blanca
```

* Funciona tanto si `usuarios.json` estÃ¡ en formato diccionario como en formato lista.
* Es reutilizable para cualquier mÃ³dulo que requiera verificar dispositivos.

---

### 4.3 `usuarios.json`

Formato persistente:

```json
[
    {
        "identificador": "AA:BB:CC:DD:EE:FF",
        "nombre": "PC Oficina",
        "fecha": "2025-08-07 20:32:15"
    }
]
```

---

### 4.4 `dashboard.html` (secciÃ³n Lista Blanca)

* **Inputs**: IP/MAC y Nombre.
* **BotÃ³n "Agregar"** â†’ EnvÃ­o por `fetch` a `/lista_blanca` (POST).
* **Tabla**: renderizada dinÃ¡micamente desde `/lista_blanca` (GET).
* **BotÃ³n eliminar** â†’ EnvÃ­o a `/lista_blanca` (DELETE).

---

## 5. EjecuciÃ³n del MÃ³dulo

1. Iniciar el servidor Flask:

   ```bash
   python app.py
   ```
2. Abrir en navegador:

   ```
   http://127.0.0.1:5000
   ```
3. En la secciÃ³n **Lista Blanca**:

   * Agregar dispositivos confiables.
   * Ver listado actualizado.
   * Eliminar dispositivos.

---

## 6. IntegraciÃ³n con MÃ³dulo 01: EscÃ¡ner de Red

* Durante el escaneo, `procesador.py` llama a `comparar_dispositivos()` de `comparador_lista_blanca.py`.
* Si la MAC/IP estÃ¡ en `usuarios.json` â†’ el dispositivo se marca como **Confiable**.
* Esto permite que el resultado del escaneo muestre el estado sin modificar la lÃ³gica interna del escÃ¡ner.

---

## 7. Pendientes / PrÃ³ximos Pasos

* Validar formato IP/MAC en el frontend.
* AÃ±adir filtro/bÃºsqueda en la tabla.
* AÃ±adir exportaciÃ³n de lista blanca a CSV/JSON.
* Conectar con el **MÃ³dulo 03: EscÃ¡ner de Puertos** para seleccionar solo dispositivos confiables.

---

